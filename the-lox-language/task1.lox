// When calling super later it is not specified what should happen. But it happens just a normal function call.
class Basic {
    init(basket) {
        this.basket = basket;
    }
}

class Extend < Basic {
    init(basket) {
        this.basket = "Extend " + basket;
        super.init(basket);
    }
}

print Extend("my asss").basket;

// Shadowing varaibles aka redeclaring does not work.

var a = "";
var a = "";

// Solution
class List {
  init(data, next) {
    this.data = data;
    this.next = next;
  }

  map(function) {
    var data = function(this.data);
    var next;
    if (this.next != nil) next = this.next.map(function);
    return List(data, next);
  }

  display() {
    var list = this;
    while (list != nil) {
      print(list.data);
      list = list.next;
    }
  }
}

var list = List(1, List(2, List(3, List(4, nil))));
list.display();

fun double(n) { return n * 2; }
list = list.map(double);
list.display();